use nannou::prelude::*;

mod creature;
mod world;
mod wall;
use crate::creature::Creature;
use crate::world::World;

fn main() {
    nannou::app(model)
        .update(update)
        .simple_window(view)
        .size(400,400)
        .run();
}

/* 
    NOTE: Creature moves forward into the screen (instead of left to right like the p5js version)
    NOTE: backdrop is generated by the current z value
    NOTE: mouse changes aesthetic instead of the 'trees' like the p5js version
*/

struct Model {
    creature: Creature,
    world: World,
    text: String
}

fn model(app: &App) -> Model {
    let win = app.window_rect();
    
    // creature properties
    let btm = win.mid_bottom();
    let size = win.w() * 0.0625;
    let speed = 0.1;
    let color = srgb(20,20,23);
    let creature = Creature::new(pt3(btm.x, btm.y + (size * 0.5), 0.0), size, speed, color);

    let text = format!("z-value: {z_value}", z_value = creature.z());

    let world = World::new(10,WHITE, win);

    Model {creature, world, text}
}

fn update(app: &App, model: &mut Model, _update: Update) {
    model.creature.update(app);
    model.text = format!("z-value: {z_value}", z_value = model.creature.z());
    model.world.update(app, model.creature.z());
}

fn view(app: &App, model: &Model, frame: Frame){
    let draw = app.draw();
    let win = app.window_rect();
    let win_tl = win.subdivisions()[3];
    // NOTE: spend some time looking at window_coordinates
    let tl_xy = win_tl.xy() - vec2(win_tl.w() * 0.25, -win_tl.h() * 0.25);

    draw.background().color(BLACK);
        
    model.creature.view(&draw);

    model.world.view(&draw);

    draw.text(&model.text)
        .color(TOMATO)
        .font_size(24)
        .wh(win.wh())
        .xy(tl_xy)
        .left_justify();

    draw.to_frame(app, &frame).unwrap();
}